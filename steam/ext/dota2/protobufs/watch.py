# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_gcmessages_client_watch.proto
# plugin: python-betterproto

from __future__ import annotations

from dataclasses import dataclass

import betterproto

from ....protobufs.msg import GCProtobufMessage
from ..enums import EMsg
from .common import MatchMinimal  # noqa: TC001

# FIND TOP SOURCE TV GAMES


@dataclass(eq=False, repr=False)
class SourceTVGameSmall(betterproto.Message):
    activate_time: int = betterproto.uint32_field(1)
    deactivate_time: int = betterproto.uint32_field(2)
    server_steam_id: int = betterproto.uint64_field(3)
    lobby_id: int = betterproto.uint64_field(4)
    league_id: int = betterproto.uint32_field(5)
    lobby_type: int = betterproto.uint32_field(6)
    game_time: int = betterproto.int32_field(7)
    delay: int = betterproto.uint32_field(8)
    spectators: int = betterproto.uint32_field(9)
    game_mode: int = betterproto.uint32_field(10)
    average_mmr: int = betterproto.uint32_field(11)
    match_id: int = betterproto.uint64_field(12)
    series_id: int = betterproto.uint32_field(13)
    team_name_radiant: str = betterproto.string_field(15)
    team_name_dire: str = betterproto.string_field(16)
    team_logo_radiant: float = betterproto.fixed64_field(24)
    team_logo_dire: float = betterproto.fixed64_field(25)
    team_id_radiant: int = betterproto.uint32_field(30)
    team_id_dire: int = betterproto.uint32_field(31)
    sort_score: int = betterproto.uint32_field(17)
    last_update_time: float = betterproto.float_field(18)
    radiant_lead: int = betterproto.int32_field(19)
    radiant_score: int = betterproto.uint32_field(20)
    dire_score: int = betterproto.uint32_field(21)
    players: list[SourceTVGameSmallPlayer] = betterproto.message_field(22)
    building_state: float = betterproto.fixed32_field(23)
    weekend_tourney_tournament_id: int = betterproto.uint32_field(26)
    weekend_tourney_division: int = betterproto.uint32_field(27)
    weekend_tourney_skill_level: int = betterproto.uint32_field(28)
    weekend_tourney_bracket_round: int = betterproto.uint32_field(29)
    custom_game_difficulty: int = betterproto.uint32_field(32)


@dataclass(eq=False, repr=False)
class SourceTVGameSmallPlayer(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    team_slot: int = betterproto.uint32_field(3)
    team: int = betterproto.uint32_field(4)


class ClientToGCFindTopSourceTVGames(GCProtobufMessage, msg=EMsg.ClientToGCFindTopSourceTVGames):
    search_key: str = betterproto.string_field(1)
    league_id: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)
    start_game: int = betterproto.uint32_field(4)
    game_list_index: int = betterproto.uint32_field(5)
    lobby_ids: list[int] = betterproto.uint64_field(6)


class GCToClientFindTopSourceTVGamesResponse(GCProtobufMessage, msg=EMsg.GCToClientFindTopSourceTVGamesResponse):
    search_key: str = betterproto.string_field(1)
    league_id: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)
    start_game: int = betterproto.uint32_field(4)
    num_games: int = betterproto.uint32_field(5)
    game_list_index: int = betterproto.uint32_field(6)
    game_list: list[SourceTVGameSmall] = betterproto.message_field(7)
    specific_games: bool = betterproto.bool_field(8)
    bot_game: SourceTVGameSmall = betterproto.message_field(9)


# MATCHES MINIMAL


class ClientToGCMatchesMinimalRequest(GCProtobufMessage, msg=EMsg.ClientToGCMatchesMinimalRequest):
    match_ids: list[int] = betterproto.uint64_field(1)


class ClientToGCMatchesMinimalResponse(GCProtobufMessage, msg=EMsg.ClientToGCMatchesMinimalResponse):
    matches: list[MatchMinimal] = betterproto.message_field(1)
    last_match: bool = betterproto.bool_field(2)
