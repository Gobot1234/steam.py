# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_gcmessages_common.proto
# plugin: python-betterproto

from __future__ import annotations

from dataclasses import dataclass

import betterproto

from ....protobufs.msg import GCProtobufMessage
from ..enums import EMsg
from .shared_enums import EEvent, EMatchOutcome, GameMode, Team  # noqa: TC001

# PROFILE CARD


class ProfileCard(GCProtobufMessage, msg=EMsg.ClientToGCGetProfileCardResponse):
    account_id: int = betterproto.uint32_field(1)
    slots: list[ProfileCardSlot] = betterproto.message_field(3)
    badge_points: int = betterproto.uint32_field(4)
    event_points: int = betterproto.uint32_field(5)
    event_id: int = betterproto.uint32_field(6)
    recent_battle_cup_victory: BattleCupVictory = betterproto.message_field(7)
    rank_tier: int = betterproto.uint32_field(8)
    leaderboard_rank: int = betterproto.uint32_field(9)
    is_plus_subscriber: bool = betterproto.bool_field(10)
    plus_original_start_date: int = betterproto.uint32_field(11)
    rank_tier_score: int = betterproto.uint32_field(12)
    leaderboard_rank_core: int = betterproto.uint32_field(17)
    title: int = betterproto.uint32_field(23)
    favorite_team_packed: int = betterproto.uint64_field(24)
    lifetime_games: int = betterproto.uint32_field(25)


@dataclass(eq=False, repr=False)
class ProfileCardSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    trophy: ProfileCardSlotTrophy = betterproto.message_field(2)
    stat: ProfileCardSlotStat = betterproto.message_field(3)
    item: ProfileCardSlotItem = betterproto.message_field(4)
    hero: ProfileCardSlotHero = betterproto.message_field(5)
    emoticon: ProfileCardSlotEmoticon = betterproto.message_field(6)
    team: ProfileCardSlotTeam = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ProfileCardSlotTrophy(betterproto.Message):
    trophy_id: int = betterproto.uint32_field(1)
    trophy_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ProfileCardSlotStat(betterproto.Message):
    stat_id: ProfileCardEStatID = betterproto.enum_field(1)
    stat_score: int = betterproto.uint32_field(2)


class ProfileCardEStatID(betterproto.Enum):
    Wins = 3
    Commends = 4
    GamesPlayed = 5
    FirstMatchDate = 6
    PreviousSeasonRank = 7
    GamesMVP = 8


@dataclass(eq=False, repr=False)
class ProfileCardSlotItem(betterproto.Message):
    serialized_item: bytes = betterproto.bytes_field(1)
    item_id: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ProfileCardSlotHero(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    hero_wins: int = betterproto.uint32_field(2)
    hero_losses: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ProfileCardSlotEmoticon(betterproto.Message):
    emoticon_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ProfileCardSlotTeam(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BattleCupVictory(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    win_date: int = betterproto.uint32_field(2)
    valid_until: int = betterproto.uint32_field(3)
    skill_level: int = betterproto.uint32_field(4)
    tournament_id: int = betterproto.uint32_field(5)
    division_id: int = betterproto.uint32_field(6)
    team_id: int = betterproto.uint32_field(7)
    streak: int = betterproto.uint32_field(8)
    trophy_id: int = betterproto.uint32_field(9)


# MATCH DETAILS


@dataclass(eq=False, repr=False)
class Match(betterproto.Message):
    duration: int = betterproto.uint32_field(3)
    starttime: float = betterproto.fixed32_field(4)
    players: list[Player] = betterproto.message_field(5)
    match_id: int = betterproto.uint64_field(6)
    tower_status: list[int] = betterproto.uint32_field(8)
    barracks_status: list[int] = betterproto.uint32_field(9)
    cluster: int = betterproto.uint32_field(10)
    first_blood_time: int = betterproto.uint32_field(12)
    replay_salt: float = betterproto.fixed32_field(13)
    server_ip: float = betterproto.fixed32_field(14)
    server_port: int = betterproto.uint32_field(15)
    lobby_type: int = betterproto.uint32_field(16)
    human_players: int = betterproto.uint32_field(17)
    average_skill: int = betterproto.uint32_field(18)
    game_balance: float = betterproto.float_field(19)
    radiant_team_id: int = betterproto.uint32_field(20)
    dire_team_id: int = betterproto.uint32_field(21)
    leagueid: int = betterproto.uint32_field(22)
    radiant_team_name: str = betterproto.string_field(23)
    dire_team_name: str = betterproto.string_field(24)
    radiant_team_logo: int = betterproto.uint64_field(25)
    dire_team_logo: int = betterproto.uint64_field(26)
    radiant_team_logo_url: str = betterproto.string_field(54)
    dire_team_logo_url: str = betterproto.string_field(55)
    radiant_team_complete: int = betterproto.uint32_field(27)
    dire_team_complete: int = betterproto.uint32_field(28)
    game_mode: GameMode = betterproto.enum_field(31)
    picks_bans: list[HeroSelectEvent] = betterproto.message_field(32)
    match_seq_num: int = betterproto.uint64_field(33)
    replay_state: ReplayState = betterproto.enum_field(34)
    radiant_guild_id: int = betterproto.uint32_field(35)
    dire_guild_id: int = betterproto.uint32_field(36)
    radiant_team_tag: str = betterproto.string_field(37)
    dire_team_tag: str = betterproto.string_field(38)
    series_id: int = betterproto.uint32_field(39)
    series_type: int = betterproto.uint32_field(40)
    broadcaster_channels: list[BroadcasterChannel] = betterproto.message_field(43)
    engine: int = betterproto.uint32_field(44)
    custom_game_data: CustomGameData = betterproto.message_field(45)
    match_flags: int = betterproto.uint32_field(46)
    private_metadata_key: float = betterproto.fixed32_field(47)
    radiant_team_score: int = betterproto.uint32_field(48)
    dire_team_score: int = betterproto.uint32_field(49)
    match_outcome: EMatchOutcome = betterproto.enum_field(50)
    tournament_id: int = betterproto.uint32_field(51)
    tournament_round: int = betterproto.uint32_field(52)
    pre_game_duration: int = betterproto.uint32_field(53)
    coaches: list[Coach] = betterproto.message_field(57)


@dataclass(eq=False, repr=False)
class Player(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    player_slot: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)
    item_0: int = betterproto.int32_field(4)
    item_1: int = betterproto.int32_field(5)
    item_2: int = betterproto.int32_field(6)
    item_3: int = betterproto.int32_field(7)
    item_4: int = betterproto.int32_field(8)
    item_5: int = betterproto.int32_field(9)
    item_6: int = betterproto.int32_field(59)
    item_7: int = betterproto.int32_field(60)
    item_8: int = betterproto.int32_field(61)
    item_9: int = betterproto.int32_field(76)
    expected_team_contribution: float = betterproto.float_field(10)
    scaled_metric: float = betterproto.float_field(11)
    previous_rank: int = betterproto.uint32_field(12)
    rank_change: int = betterproto.sint32_field(13)
    mmr_type: int = betterproto.uint32_field(74)
    kills: int = betterproto.uint32_field(14)
    deaths: int = betterproto.uint32_field(15)
    assists: int = betterproto.uint32_field(16)
    leaver_status: int = betterproto.uint32_field(17)
    gold: int = betterproto.uint32_field(18)
    last_hits: int = betterproto.uint32_field(19)
    denies: int = betterproto.uint32_field(20)
    gold_per_min: int = betterproto.uint32_field(21)
    xp_per_min: int = betterproto.uint32_field(22)
    gold_spent: int = betterproto.uint32_field(23)
    hero_damage: int = betterproto.uint32_field(24)
    tower_damage: int = betterproto.uint32_field(25)
    hero_healing: int = betterproto.uint32_field(26)
    level: int = betterproto.uint32_field(27)
    time_last_seen: int = betterproto.uint32_field(28)
    player_name: str = betterproto.string_field(29)
    support_ability_value: int = betterproto.uint32_field(30)
    feeding_detected: bool = betterproto.bool_field(32)
    search_rank: int = betterproto.uint32_field(34)
    search_rank_uncertainty: int = betterproto.uint32_field(35)
    rank_uncertainty_change: int = betterproto.int32_field(36)
    hero_play_count: int = betterproto.uint32_field(37)
    party_id: float = betterproto.fixed64_field(38)
    scaled_hero_damage: int = betterproto.uint32_field(54)
    scaled_tower_damage: int = betterproto.uint32_field(55)
    scaled_hero_healing: int = betterproto.uint32_field(56)
    scaled_kills: float = betterproto.float_field(39)
    scaled_deaths: float = betterproto.float_field(40)
    scaled_assists: float = betterproto.float_field(41)
    claimed_farm_gold: int = betterproto.uint32_field(42)
    support_gold: int = betterproto.uint32_field(43)
    claimed_denies: int = betterproto.uint32_field(44)
    claimed_misses: int = betterproto.uint32_field(45)
    misses: int = betterproto.uint32_field(46)
    ability_upgrades: list[AbilityUpgrade] = betterproto.message_field(47)
    additional_units_inventory: list[AdditionalUnitInventory] = betterproto.message_field(48)
    permanent_buffs: list[PermanentBuff] = betterproto.message_field(57)
    pro_name: str = betterproto.string_field(72)
    real_name: str = betterproto.string_field(73)
    custom_game_data: CustomGameData = betterproto.message_field(50)
    active_plus_subscription: bool = betterproto.bool_field(51)
    net_worth: int = betterproto.uint32_field(52)
    bot_difficulty: int = betterproto.uint32_field(58)
    hero_pick_order: int = betterproto.uint32_field(63)
    hero_was_randomed: bool = betterproto.bool_field(64)
    hero_was_dota_plus_suggestion: bool = betterproto.bool_field(69)
    hero_damage_received: list[HeroDamageReceived] = betterproto.message_field(67)
    hero_damage_dealt: list[HeroDamageReceived] = betterproto.message_field(79)
    seconds_dead: int = betterproto.uint32_field(70)
    gold_lost_to_death: int = betterproto.uint32_field(71)
    lane_selection_flags: int = betterproto.uint32_field(75)
    bounty_runes: int = betterproto.uint32_field(77)
    outposts_captured: int = betterproto.uint32_field(78)
    team_number: Team = betterproto.enum_field(80)
    team_slot: int = betterproto.uint32_field(81)
    selected_facet: int = betterproto.uint32_field(82)


@dataclass(eq=False, repr=False)
class AbilityUpgrade(betterproto.Message):
    ability: int = betterproto.int32_field(1)
    time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AdditionalUnitInventory(betterproto.Message):
    unit_name: str = betterproto.string_field(1)
    items: list[int] = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class PermanentBuff(betterproto.Message):
    permanent_buff: int = betterproto.uint32_field(1)
    stack_count: int = betterproto.uint32_field(2)
    grant_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CustomGameData(betterproto.Message):
    dota_team: int = betterproto.uint32_field(1)
    winner: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class HeroDamageReceived(betterproto.Message):
    pre_reduction: int = betterproto.uint32_field(1)
    post_reduction: int = betterproto.uint32_field(2)
    damage_type: HeroDamageType = betterproto.enum_field(3)


class HeroDamageType(betterproto.Enum):
    Physical = 0
    Magical = 1
    Pure = 2


@dataclass(eq=False, repr=False)
class HeroSelectEvent(betterproto.Message):
    is_pick: bool = betterproto.bool_field(1)
    team: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)


class ReplayState(betterproto.Enum):
    Available = 0
    NotRecorded = 1
    Expired = 2


@dataclass(eq=False, repr=False)
class BroadcasterChannel(betterproto.Message):
    country_code: str = betterproto.string_field(1)
    description: str = betterproto.string_field(2)
    broadcaster_infos: list[BroadcasterInfo] = betterproto.message_field(3)
    language_code: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class BroadcasterInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class Coach(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    coach_name: str = betterproto.string_field(2)
    coach_rating: int = betterproto.uint32_field(3)
    coach_team: int = betterproto.uint32_field(4)
    coach_party_id: int = betterproto.uint64_field(5)
    is_private_coach: bool = betterproto.bool_field(6)


# MATCH MINIMAL


@dataclass(eq=False, repr=False)
class MatchMinimal(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    start_time: float = betterproto.fixed32_field(2)
    duration: int = betterproto.uint32_field(3)
    game_mode: GameMode = betterproto.enum_field(4)
    players: list[MatchMinimalPlayer] = betterproto.message_field(6)
    tourney: MatchMinimalTourney = betterproto.message_field(7)
    match_outcome: EMatchOutcome = betterproto.enum_field(8)
    radiant_score: int = betterproto.uint32_field(9)
    dire_score: int = betterproto.uint32_field(10)
    lobby_type: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class MatchMinimalPlayer(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    kills: int = betterproto.uint32_field(3)
    deaths: int = betterproto.uint32_field(4)
    assists: int = betterproto.uint32_field(5)
    items: list[int] = betterproto.int32_field(6)
    player_slot: int = betterproto.uint32_field(7)
    pro_name: str = betterproto.string_field(8)
    level: int = betterproto.uint32_field(9)
    team_number: Team = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class MatchMinimalTourney(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    series_type: int = betterproto.uint32_field(8)
    series_game: int = betterproto.uint32_field(9)
    weekend_tourney_tournament_id: int = betterproto.uint32_field(10)
    weekend_tourney_season_trophy_id: int = betterproto.uint32_field(11)
    weekend_tourney_division: int = betterproto.uint32_field(12)
    weekend_tourney_skill_level: int = betterproto.uint32_field(13)
    radiant_team_id: int = betterproto.uint32_field(2)
    radiant_team_name: str = betterproto.string_field(3)
    radiant_team_logo: float = betterproto.fixed64_field(4)
    radiant_team_logo_url: str = betterproto.string_field(14)
    dire_team_id: int = betterproto.uint32_field(5)
    dire_team_name: str = betterproto.string_field(6)
    dire_team_logo: float = betterproto.fixed64_field(7)
    dire_team_logo_url: str = betterproto.string_field(15)


# PROFILE REQUEST


@dataclass(eq=False, repr=False)
class SuccessfulHero(betterproto.Message):
    hero_id: int = betterproto.uint32_field(1)
    win_percent: float = betterproto.float_field(2)
    longest_streak: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RecentMatchInfo(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    game_mode: GameMode = betterproto.enum_field(2)
    kills: int = betterproto.uint32_field(3)
    deaths: int = betterproto.uint32_field(4)
    assists: int = betterproto.uint32_field(5)
    duration: int = betterproto.uint32_field(6)
    player_slot: int = betterproto.uint32_field(7)
    match_outcome: EMatchOutcome = betterproto.enum_field(8)
    timestamp: int = betterproto.uint32_field(9)
    lobby_type: int = betterproto.uint32_field(10)
    team_number: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class StickerbookPage(betterproto.Message):
    page_num: int = betterproto.uint32_field(1)
    event_id: EEvent = betterproto.enum_field(2)
    team_id: int = betterproto.uint32_field(3)
    stickers: list[StickerbookSticker] = betterproto.message_field(4)
    page_type: EStickerbookPageType = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class StickerbookSticker(betterproto.Message):
    item_def_id: int = betterproto.uint32_field(1)
    sticker_num: int = betterproto.uint32_field(2)
    quality: int = betterproto.uint32_field(3)
    position_x: float = betterproto.float_field(4)
    position_y: float = betterproto.float_field(5)
    position_z: float = betterproto.float_field(8)
    rotation: float = betterproto.float_field(6)
    scale: float = betterproto.float_field(7)
    source_item_id: int = betterproto.uint64_field(9)
    depth_bias: int = betterproto.uint32_field(10)


class EStickerbookPageType(betterproto.Enum):
    Generic = 0
    Team = 1
    Talent = 2
